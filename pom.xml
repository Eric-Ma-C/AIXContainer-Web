<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>


    <groupId>org.zju.vipa.aix.web</groupId>
    <artifactId>container</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>container-web</name>
    <packaging>jar</packaging>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

<!--    <profiles>-->
<!--        <profile>-->
<!--            <id>aix205</id>-->
<!--&lt;!&ndash;            <activation>&ndash;&gt;-->
<!--&lt;!&ndash;                <activeByDefault>true</activeByDefault>&ndash;&gt;-->
<!--&lt;!&ndash;            </activation>&ndash;&gt;-->
<!--            <properties>-->
<!--                <profile.active>aix205</profile.active>-->
<!--                <wagon.upload.server.path>scpexe://10.214.211.205/nfs/aix-container/web_dubbo_backend</wagon.upload.server.path>-->
<!--            </properties>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            <id>aix207</id>-->
<!--            <activation>-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
<!--            <properties>-->
<!--                <profile.active>aix207</profile.active>-->
<!--                <wagon.upload.server.path>scpexe://10.214.211.207/nfs2/aix-container/web_dubbo_backend</wagon.upload.server.path>-->
<!--            </properties>-->
<!--        </profile>-->
<!--    </profiles>-->

    <dependencies>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.1</version>
            <exclusions>
                <!--排除logback-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>6.0.6</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>2.1.1</version>
            <exclusions>
                <!--排除logback-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.github.pagehelper</groupId>-->
<!--            <artifactId>pagehelper-spring-boot-starter</artifactId>-->
<!--            <version>1.3.0</version>-->
<!--        </dependency>-->

        <!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
<!--        <dependency>-->
<!--            <groupId>org.springframework.kafka</groupId>-->
<!--            <artifactId>spring-kafka</artifactId>-->
            <!--            <version>1.1.1.RELEASE</version>-->
<!--        </dependency>-->

        <!--        <dependency>-->
        <!--            <groupId>org.apache.kafka</groupId>-->
        <!--            <artifactId>kafka-clients</artifactId>-->
        <!--            <version>1.1.1</version>-->
        <!--        </dependency>-->


        <dependency>
            <groupId>vipa</groupId>
            <artifactId>dubbo-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <!--            <scope>compile</scope>-->
        </dependency>


        <dependency>
            <groupId>vipa</groupId>
            <artifactId>Common</artifactId>
            <version>1.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
            <!--            <scope>compile</scope>-->
        </dependency>


        <!--        &lt;!&ndash; https://mvnrepository.com/artifact/com.alibaba/dubbo &ndash;&gt;-->
        <!--        <dependency>-->
        <!--            <groupId>com.alibaba</groupId>-->
        <!--            <artifactId>dubbo</artifactId>-->
        <!--            <version>2.6.2</version>-->
        <!--        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.16</version>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!--排除logback-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--log4j2 依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!-- 支持单元测试：SpringBootTest -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- 单元测试:Junit依赖 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>

        <resources>
            <resource>
<!--                <directory>${project.basedir}/src/main/resources</directory>-->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                &lt;!&ndash;①我们通过 excludes 来将所有的 application*.properties 排除在外，这样 maven 在打包时就不会复制这些文件。毕竟我们不希望把 application-dev.properties 也包含在 prod 的 jar 包里。&ndash;&gt;-->
<!--                <excludes>-->
<!--                    <exclude>application*.properties</exclude>-->
<!--                </excludes>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                &lt;!&ndash;②通过开启 filtering，maven 会将文件中的 @XX@ 替换 profile 中定义的 XX 变量/属性。另外，我们还通过 includes 来告诉 maven 根据profile 来复制对应的 properties 文件&ndash;&gt;-->
<!--                <filtering>true</filtering>-->
<!--                <includes>-->
<!--                    <include>application.properties</include>-->
<!--                    <include>application-${profile.active}.properties</include>-->
<!--                </includes>-->
<!--            </resource>-->
<!--            &lt;!&ndash;此处的配置是识别到mapper.xml文件，也可以在application.properties中配置&ndash;&gt;-->
<!--            <resource>-->
<!--                <directory>src/main/java</directory>-->
<!--                <includes>-->
<!--                    <include>**/*.xml</include>-->
<!--                </includes>-->
<!--            </resource>-->
        </resources>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>3.3.3</version>
            </extension>
        </extensions>
        <plugins>
            <!--读取配置文件-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.basedir}/src/main/resources/application.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.3.0.RELEASE</version>
                <configuration>
                    <mainClass>org.zju.vipa.aix.web.container.ContainerWebApplication</mainClass>
                </configuration>
            </plugin>

            <!--自动部署jar至服务器-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>2.0.0</version>
                <executions>
                    <execution>
                        <id>upload-deploy</id>
                        <!-- 运行package打包的同时运行upload-single -->
                        <phase>package</phase>
                        <goals>
                            <goal>upload-single</goal>
                        </goals>
                        <configuration>
                            <!--                            <serverId>vipa-aliyun</serverId>-->
                            <!--                            <fromFile>target/ManagementCenter-1.0-SNAPSHOT-jar-with-dependencies.jar</fromFile>-->
                            <!--                            <url>scp://120.55.242.132/home/aix/downloads/</url>-->


                            <!--                            <serverId>my-aliyun</serverId>-->
                            <!--                            <fromFile>target/ManagementCenter-1.0-SNAPSHOT-jar-with-dependencies.jar</fromFile>-->
                            <!--                            <url>scp://112.124.46.179/home/maven_upload/</url>-->


                            <!--                            <serverId>vipa-205</serverId>-->
                            <!--                            <fromFile>target/ManagementCenter-1.0-SNAPSHOT-jar-with-dependencies.jar</fromFile>-->
                            <!--                            <url>scp://10.214.211.205/nfs2/mc/docker/aix-center</url>-->

                            <serverId>vipa-207-key</serverId>
                            <fromFile>target/container-0.0.1-SNAPSHOT.jar</fromFile>
                            <url>${wagon.upload.server.path}</url>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
